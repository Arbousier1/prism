plugins {
    id 'prism.java-conventions'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

dependencies {
    compileOnly project.property('deps.adventure-api')
    compileOnly project.property('deps.adventure-bukkit')
    compileOnly project.property('deps.adventure-minimessage')
    compileOnly project.property('deps.adventure-plain')
    compileOnly project.property('deps.apache-commons-collections')
    compileOnly project.property('deps.configurate-hocon')
    compileOnly project.property('deps.expiringmap')
    compileOnly project.property('deps.fastutil')
    compileOnly project.property('deps.guice')
    compileOnly project.property('deps.guice-assistedinject')
    compileOnly project.property('deps.jar-relocator')
    compileOnly project.property('deps.jooq')
    compileOnly project.property('deps.log4j-api')
    compileOnly project.property('deps.log4j-core')
    compileOnly project.property('deps.moonshine-core')
    compileOnly project.property('deps.moonshine-standard')
    compileOnly project.property('deps.nbt-api')
    compileOnly project.property('deps.p6spy')
    compileOnly project.property('deps.spigot-api')
    compileOnly project.property('deps.taskchain')
    // included here as I'm too lazy to add snapshot support to the dep loader
    implementation project.property('deps.triumph-cmd-bukkit')
    implementation project(':prism-core')
    compileOnly project(':prism-api')
    compileOnly project(':prism-loader')
}

// "parameters" flag required for moonshine to work
compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

shadowJar {
    archiveFileName = 'prism-bukkit.jarinjar'

    relocate 'co.aikar.taskchain', 'network.darkhelmet.prism.libs.taskchain'
    relocate 'com.google.inject', 'network.darkhelmet.prism.libs.inject'
    relocate 'com.h2database', 'network.darkhelmet.prism.libs.h2'
    relocate 'com.mysql', 'network.darkhelmet.prism.libs.mysql'
    relocate 'com.p6spy.engine', 'network.darkhelmet.prism.libs.p6spy'
    relocate 'com.typesafe.config', 'network.darkhelmet.prism.libs.hocon'
    relocate 'com.zaxxer.hikari', 'network.darkhelmet.prism.libs.hikari'
    relocate 'de.tr7zw.nbtapi', 'network.darkhelmet.prism.libs.nbtapi'
    relocate 'dev.triumphteam', 'network.darkhelmet.prism.libs.triumphteam'
    relocate 'io.leangen.geantyref', 'network.darkhelmet.prism.libs.geantyref'
    relocate 'it.unimi.dsi.fastutil', 'network.darkhelmet.prism.libs.fastutil'
    relocate 'net.jodah.expiringmap', 'network.darkhelmet.prism.libs.expiringmap'
    relocate 'net.kyori.adventure', 'network.darkhelmet.prism.libs.adventure'
    relocate 'net.kyori.moonshine', 'network.darkhelmet.prism.libs.moonshine'
    relocate 'org.aopalliance', 'network.darkhelmet.prism.libs.aopalliance'
    relocate 'org.apache.commons', 'network.darkhelmet.prism.libs.commons'
    relocate 'org.jooq', 'network.darkhelmet.prism.libs.jooq'
    relocate 'org.mariadb', 'network.darkhelmet.prism.libs.mariadb'
    relocate 'org.postgresql', 'network.darkhelmet.prism.libs.postgresql'
    relocate 'org.spongepowered.configurate', 'network.darkhelmet.prism.libs.configurate'
    // org.jetbrains.annotations
    // org.checkerframework
}

artifacts {
    archives shadowJar
}